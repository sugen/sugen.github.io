{"meta":{"title":"似水年华","subtitle":"明月百年心","description":null,"author":"Steven Su","url":"https://www.sugen.cn","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2019-06-22T15:33:30.794Z","updated":"2019-06-22T15:33:30.793Z","comments":false,"path":"/404.html","permalink":"https://www.sugen.cn//404.html","excerpt":"","text":""},{"title":"关于","date":"2019-06-22T15:33:30.794Z","updated":"2019-06-22T15:33:30.793Z","comments":false,"path":"about/index.html","permalink":"https://www.sugen.cn/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2019-06-22T15:33:30.794Z","updated":"2019-06-22T15:33:30.793Z","comments":false,"path":"books/index.html","permalink":"https://www.sugen.cn/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-06-22T15:33:30.794Z","updated":"2019-06-22T15:33:30.793Z","comments":false,"path":"categories/index.html","permalink":"https://www.sugen.cn/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2019-06-22T15:37:49.317Z","updated":"2019-06-22T15:37:49.316Z","comments":false,"path":"repository/index.html","permalink":"https://www.sugen.cn/repository/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-06-22T16:14:47.291Z","updated":"2019-06-22T16:14:47.290Z","comments":true,"path":"links/index.html","permalink":"https://www.sugen.cn/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-06-22T15:36:55.363Z","updated":"2019-06-22T15:36:55.363Z","comments":false,"path":"tags/index.html","permalink":"https://www.sugen.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2019-06-21T16:00:00.000Z","updated":"2019-06-22T22:14:42.481Z","comments":true,"path":"article-2019062211.html","link":"","permalink":"https://www.sugen.cn/article-2019062211.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"github","slug":"github","permalink":"https://www.sugen.cn/categories/github/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.sugen.cn/tags/hexo/"},{"name":"github","slug":"github","permalink":"https://www.sugen.cn/tags/github/"}]},{"title":"多个Hexo博客网站github发布","slug":"blog","date":"2019-06-21T16:00:00.000Z","updated":"2019-06-22T22:14:19.550Z","comments":true,"path":"article-20190622.html","link":"","permalink":"https://www.sugen.cn/article-20190622.html","excerpt":"","text":"来源：www.sugen.cn 作者：Steven 更新时间：2019-04-06Git 最著名报错 “ERROR: Permission to XXX.git denied to user”终极解决方案今天在弄Hexo自动发布到github的时候，遇到了点小麻烦，总结了一下，终于找到解决方案！报错如下： 123ERROR: Permission to sugen/sugen.github.io.git denied to biancard.fatal: Could not read from remote repository.Please make sure you have the correct access rights and the repository exists. 初看知道大概是没有权限，导致不能从远程仓库读取，后来询问才知道我同事的电脑的SSH公钥已经绑定了他自己的GitHub 账号，我就不能再用他的公钥了，具体的请看stackoverflow网友所说的：GitHub will use the key as means to identify you when you connect to them via SSH. As such, you cannot have multiple accounts with the same key, as GitHub won’t be able to tell then which of your accounts you want to use.上面说的话很清楚，就是你不能有多个账号添加了同一个公钥，一旦那样github就不能区分到底是哪个用户在安全登陆网站，那安全登录就起不到任何效果了，因为你能登进去，我也能登进去，那服务器到底判断是谁登了呢！但是要注意一个账号可以拥有多个公钥，这个是可以允许的！比如，在A电脑和B电脑上的公钥都绑定了同个一个账户Tom，那么两台电脑在终端上输入ssh -T git@github.com最后都会显示Hi Tom! You’ve successfully authenticated, but GitHub does not provide shell access.服务器依然会知道这是Tom的第二台电脑在登陆，他是土豪，账号依然很安全！ 场景下面再举个例子，Tom在公司有个公司账户publicAccount，然后回到家他也有自己创建私人的账号privateAccount，但是他只有一台电脑，意味着一般情况下，他要么用公司账户绑定电脑公钥，要么用家里私人账号绑定，但是不管哪一种绑定，最后都达不到这两个账号访问同一个远程仓库，那么协同开发也就成了泡沫！因为只有一台电脑，如果Tom试图访问没有绑定公钥的账户的时候，就会报错ERROR: Permission to hbxn740150254/BestoneGitHub.git denied to Tom解决思路 买台新电脑，获得新公钥，这是最土豪也是最傻的方法 利用自己唯一的电脑生成多公钥，公钥一多，不就可以想绑定多少个都行了吗，不怕你把它玩坏😂😂😂 解决方案 1、生成一个新的SSH KEYAppledeiMac:~ Apple$ cd ~/.sshAppledeiMac:.ssh Apple$ lsid_rsa id_rsa.pub known_hostsAppledeiMac:.ssh Apple$ ssh-keygen -t rsa -C “iMac_personnal_publicKey”Generating public/private rsa key pair.Enter file in which to save the key (/Users/Apple/.ssh/id_rsa):/Users/Apple/.ssh/id_rsa_personalEnter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /Users/Apple/.ssh/id_rsa_personal.Your public key has been saved in /Users/Apple/.ssh/id_rsa_personal.pub.The key fingerprint is:SHA256:1gepuxDHwJRnFbKvc0Zq/NGrFGE9kEXS06jxatPPrSQ iMac_personnal_publicKeyThe key’s randomart image is:+—[RSA 2048]—-+| ….=*oo || o. ooo=+ . || oo. =+o. || o =.o.. || . S =o. || = =++. || . B.=.Eo.. || o B . +o .|| . o.. .. |+—-[SHA256]—–+AppledeiMac:.ssh Apple$ lsid_rsa id_rsa_personal known_hostsid_rsa.pub id_rsa_personal.pub` 2、打开新生成的~/.ssh/id_rsa2.pub文件，将里面的内容添加到GitHub后台。 3、打开~/.ssh/config文件 没有config文件则创建，终端输入touch config ，创建完以后用Vim打开或者是在Finder打开一样。在不影响默认的github设置下我们重新添加一个Host：建一个自己能辨识的github别名，我取的是github-personal，新建的帐号使用这个别名做克隆和更新Host github-personal HostName github.comUser gitIdentityFile ~/.ssh/id_rsa_personal编辑完毕之后按下ESC，:wq，:wq是保存并退出vim编辑器具体在终端代码如下：cat config 是把config文件里面的内容在终端输出AppledeiMac:.ssh Apple$ vim configAppledeiMac:.ssh Apple$ cat config #Default GitHub Host github.com HostName github.com User git IdentityFile ~/.ssh/id_rsa Host github-personal HostName github.com User git IdentityFile ~/.ssh/id_rsa_personal 4、将GitHub SSH仓库地址中的git@github.com替换成新建的Host别名。 如原地址是 git@github.com:hbxn740150254/BestoneGitHub.git 替换后应该是：github-personal:hbxn740150254/BestoneGitHub.git 或者git@github-personal:hbxn740150254/BestoneGitHub.git亲测都是可以的，如果是新建的仓库，直接使用替换后的URL克隆即可。如果已经使用原地址克隆过了，可以使用命令修改：AppledeiMac:.ssh Apple$ cd /Users/Apple/Desktop/BestoneDemo//修改之前Apple$ git remote -vgithub git@github.com:hbxn740150254/BestoneGitHub.git (fetch)github git@github.com:hbxn740150254/BestoneGitHub.git (push)//修改 remote set-urlAppledeiMac:BestoneDemo Apple$ git remote set-url github github- personal:hbxn740150254/BestoneGitHub.git//验证是否修改成功//使用修改后的github-personal SSH连接，连接成功用户是hbxn740150254，此时公钥是id_rsa_personalAppledeiMac:BestoneDemo Apple$ ssh -T github-personalHi hbxn740150254! You’ve successfully authenticated, but GitHub does not provide shell access.//使用默认的git@github.com SSH去连接,连接成功用户是FaxeXian，此时公钥是id_rsaAppledeiMac:.ssh Apple$ ssh -T git@github.comHi FaxeXian! You’ve successfully authenticated, but GitHub does not provide shell access.//修改之后AppledeiMac:BestoneDemo Apple$ git remote -vgithub github-personal:hbxn740150254/BestoneGitHub.git (fetch)github github-personal:hbxn740150254/BestoneGitHub.git (push) 最后我们进行正常的push，fetch 操作，都可以//更改后的github push成功！AppledeiMac:BestoneDemo Apple$ git push github testMerge:masterTotal 0 (delta 0), reused 0 (delta 0)To github-personal:hbxn740150254/BestoneGitHub.git cd773e9..f622210 testMerge -&gt; master //github默认的节点origin我们也可以正常push操作AppledeiMac:BestoneDemo Apple$ git push origin testMerge:testMergeCounting objects: 460, done.Delta compression using up to 4 threads.Compressing objects: 100% (240/240), done.Writing objects: 100% (460/460), 16.69 MiB | 442.00 KiB/s, done.Total 460 (delta 211), reused 453 (delta 205)To git@git.coding.net:hbxn740150254/Local-Git.git [new branch] testMerge -&gt; testMerge github账户如果还是显示之前id_rsa密钥账户的话请把你的密钥加入sshAgent代理中 添加你的ssh密钥到ssh-agent中 start the ssh-agent in the backgroundeval “$(ssh-agent -s)”Agent pid 59566 如果你的密钥不是系统默认的RSA文件名id_rsa，比如像我一样另外创了一对公钥/密钥id_rsa_personal，那么就把他们添加进去，注意：密钥文件是不带扩展名的，公钥扩展名是.pub，代表publicKey，apple:.ssh apple$ eval “$(ssh-agent -s)”Agent pid 19795//添加密钥 id_rsa_personalapple:.ssh apple$ ssh-add id_rsa_personalIdentity added: id_rsa_personal (github-personal)//添加默认密钥 id_rsaapple:.ssh apple$ ssh-add id_rsa//密钥有密码的话就会要你提示输入 passphraseEnter passphrase for id_rsa://测试用密钥isa是否连接成功githubapple:.ssh apple$ ssh -T git@github.comHi hbxn740150254! You ‘ve successfully authenticated, but GitHub does not provide shell access.//测试密钥id_rsa_personal是否连接成功githubapple:.ssh apple$ ssh -T git@github-personalHi FaxeXian! You’ve successfully authenticated, but GitHub does not provide shell access. 这样，一台电脑生成的两个公钥让两个用户成功连接，就可以访问别人的远程仓库，可以进行多人开发了！！","categories":[{"name":"github","slug":"github","permalink":"https://www.sugen.cn/categories/github/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.sugen.cn/tags/hexo/"},{"name":"github","slug":"github","permalink":"https://www.sugen.cn/tags/github/"}]}]}